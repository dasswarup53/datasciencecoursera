tcorrs <- sapply(list.files(directory), tcorr) #get all correlations + NULLs
tcorrs <- unlist(tcorrs[!sapply(tcorrs, is.null)]) #remove NULLs
return (tcorrs)
}
pollutantmean(x,"nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean<-function(directory,pollutant,id){
monitor_count<-0
mean<-0
for(x in id){
file<-paste(formatC(x,width = 3,flag="0"),"csv",sep=".")
data<-read.csv(file)
if(pollutant=="sulfate")
{monitor_count<-monitor_count+1
mean<-mean+colMeans(data[,2,drop=FALSE],na.rm=TRUE)
}
if(pollutant=="nitrate")
{monitor_count<-monitor_count+1
mean<-mean+colMeans(data[,3,drop=FALSE],na.rm=TRUE)
}
}
print("mean is as follows :")
print(mean/monitor_count)
}
complete <- function(directory, id = 1:332) {
count_complete <- function(fname) sum(complete.cases(read.csv(fname)))
fnames <- list.files(directory, full.names=TRUE)[id]
data.frame(id = id, complete = unlist(lapply(fnames, count_complete)))
}
corr <- function(directory, threshold = 0) {
tcorr <- function(fname) {
data <- read.csv(file.path(directory, fname))
nobs <- sum(complete.cases(data))
if (nobs > threshold) {
return (cor(data$nitrate, data$sulfate, use="complete.obs"))
}
}
tcorrs <- sapply(list.files(directory), tcorr) #get all correlations + NULLs
tcorrs <- unlist(tcorrs[!sapply(tcorrs, is.null)]) #remove NULLs
return (tcorrs)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean<-function(directory,pollutant,id){
monitor_count<-0
mean<-0
for(x in id){
file<-paste(formatC(x,width = 3,flag="0"),"csv",sep=".")
data<-read.csv(file)
data<-na.omit(data)
if(pollutant=="sulfate")
{monitor_count<-monitor_count+1
mean<-mean+colMeans(data[,2,drop=FALSE],na.rm=TRUE)
}
if(pollutant=="nitrate")
{monitor_count<-monitor_count+1
mean<-mean+colMeans(data[,3,drop=FALSE],na.rm=TRUE)
}
}
print("mean is as follows :")
print(mean/monitor_count)
}
complete <- function(directory, id = 1:332) {
count_complete <- function(fname) sum(complete.cases(read.csv(fname)))
fnames <- list.files(directory, full.names=TRUE)[id]
data.frame(id = id, complete = unlist(lapply(fnames, count_complete)))
}
corr <- function(directory, threshold = 0) {
tcorr <- function(fname) {
data <- read.csv(file.path(directory, fname))
nobs <- sum(complete.cases(data))
if (nobs > threshold) {
return (cor(data$nitrate, data$sulfate, use="complete.obs"))
}
}
tcorrs <- sapply(list.files(directory), tcorr) #get all correlations + NULLs
tcorrs <- unlist(tcorrs[!sapply(tcorrs, is.null)]) #remove NULLs
return (tcorrs)
}
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean <- function(directory, pollutant, id = 1:332) {
setwd(file.path(getwd(), directory)) ## setting the directory
total = 0                            ## the sum of all observed values of pollutant (either sulfate or nitrate)
observations = 0                     ## the total number of observed values of pollutant (either sulfate or nitrate)
#Looping thru the directory's files specified in the 'id' argument
for (i in id)
{
## Due to the format of the filename, i.e 001, 010  instead of 1, 10. I became aware that the following method works but not efficient,
## but at the time of the completion of this assignment, it was the only way I knew how to do it.
if (i <10) {
data <- read.csv(paste("0","0", as.character(i), ".csv", sep=""),  ## for example, if 'id' =7, we get 007.csv
header = T,
na.strings=c("NA","NaN", " "))
}
else if (i>=10 & i<100) {
data <- read.csv(paste("0", as.character(i), ".csv", sep=""),  ## for example, if 'id' = 17, we get 017.csv
header = T,
na.strings=c("NA","NaN", " ")
)
}
else       {
data <- read.csv(paste(as.character(i), ".csv", sep=""),     ## Normal
header = T,
na.strings=c("NA","NaN", " ")
)
}
## getting rid of all the "NA" values and, consequently, all the non-complete ovservations (the ones with at least one NA in row)
data = na.omit(data)
##  cumulative addition of the complete observations
observations = observations + nrow(data)
## depending the poluttant ( sulfate or nitrate), we aggregate the observed values
if (pollutant == "sulfate") {total = total + sum(data$sulfate)}
else {total = total + sum(data$nitrate)}
}
## reset directory path
setwd("..")
## returning the mean of the pollutant values
return (total/observations)
}
complete <- function(directory, id = 1:332) {
count_complete <- function(fname) sum(complete.cases(read.csv(fname)))
fnames <- list.files(directory, full.names=TRUE)[id]
data.frame(id = id, complete = unlist(lapply(fnames, count_complete)))
}
corr <- function(directory, threshold = 0) {
tcorr <- function(fname) {
data <- read.csv(file.path(directory, fname))
nobs <- sum(complete.cases(data))
if (nobs > threshold) {
return (cor(data$nitrate, data$sulfate, use="complete.obs"))
}
}
tcorrs <- sapply(list.files(directory), tcorr) #get all correlations + NULLs
tcorrs <- unlist(tcorrs[!sapply(tcorrs, is.null)]) #remove NULLs
return (tcorrs)
}
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean <- function(directory, pollutant, id = 1:332) {
total = 0                            ## the sum of all observed values of pollutant (either sulfate or nitrate)
observations = 0                     ## the total number of observed values of pollutant (either sulfate or nitrate)
#Looping thru the directory's files specified in the 'id' argument
for (i in id)
{
## Due to the format of the filename, i.e 001, 010  instead of 1, 10. I became aware that the following method works but not efficient,
## but at the time of the completion of this assignment, it was the only way I knew how to do it.
if (i <10) {
data <- read.csv(paste("0","0", as.character(i), ".csv", sep=""),  ## for example, if 'id' =7, we get 007.csv
header = T,
na.strings=c("NA","NaN", " "))
}
else if (i>=10 & i<100) {
data <- read.csv(paste("0", as.character(i), ".csv", sep=""),  ## for example, if 'id' = 17, we get 017.csv
header = T,
na.strings=c("NA","NaN", " ")
)
}
else       {
data <- read.csv(paste(as.character(i), ".csv", sep=""),     ## Normal
header = T,
na.strings=c("NA","NaN", " ")
)
}
## getting rid of all the "NA" values and, consequently, all the non-complete ovservations (the ones with at least one NA in row)
data = na.omit(data)
##  cumulative addition of the complete observations
observations = observations + nrow(data)
## depending the poluttant ( sulfate or nitrate), we aggregate the observed values
if (pollutant == "sulfate") {total = total + sum(data$sulfate)}
else {total = total + sum(data$nitrate)}
}
## reset directory path
setwd("..")
## returning the mean of the pollutant values
return (total/observations)
}
complete <- function(directory, id = 1:332) {
count_complete <- function(fname) sum(complete.cases(read.csv(fname)))
fnames <- list.files(directory, full.names=TRUE)[id]
data.frame(id = id, complete = unlist(lapply(fnames, count_complete)))
}
corr <- function(directory, threshold = 0) {
tcorr <- function(fname) {
data <- read.csv(file.path(directory, fname))
nobs <- sum(complete.cases(data))
if (nobs > threshold) {
return (cor(data$nitrate, data$sulfate, use="complete.obs"))
}
}
tcorrs <- sapply(list.files(directory), tcorr) #get all correlations + NULLs
tcorrs <- unlist(tcorrs[!sapply(tcorrs, is.null)]) #remove NULLs
return (tcorrs)
}
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
total = 0                            ## the sum of all observed values of pollutant (either sulfate or nitrate)
observations = 0                     ## the total number of observed values of pollutant (either sulfate or nitrate)
#Looping thru the directory's files specified in the 'id' argument
for (i in id)
{
## Due to the format of the filename, i.e 001, 010  instead of 1, 10. I became aware that the following method works but not efficient,
## but at the time of the completion of this assignment, it was the only way I knew how to do it.
if (i <10) {
data <- read.csv(paste("0","0", as.character(i), ".csv", sep=""),  ## for example, if 'id' =7, we get 007.csv
header = T,
na.strings=c("NA","NaN", " "))
}
else if (i>=10 & i<100) {
data <- read.csv(paste("0", as.character(i), ".csv", sep=""),  ## for example, if 'id' = 17, we get 017.csv
header = T,
na.strings=c("NA","NaN", " ")
)
}
else       {
data <- read.csv(paste(as.character(i), ".csv", sep=""),     ## Normal
header = T,
na.strings=c("NA","NaN", " ")
)
}
## getting rid of all the "NA" values and, consequently, all the non-complete ovservations (the ones with at least one NA in row)
data = na.omit(data)
##  cumulative addition of the complete observations
observations = observations + nrow(data)
## depending the poluttant ( sulfate or nitrate), we aggregate the observed values
if (pollutant == "sulfate") {total = total + sum(data$sulfate)}
else {total = total + sum(data$nitrate)}
}
## reset directory path
setwd("..")
## returning the mean of the pollutant values
return (total/observations)
}
complete <- function(directory, id = 1:332) {
count_complete <- function(fname) sum(complete.cases(read.csv(fname)))
fnames <- list.files(directory, full.names=TRUE)[id]
data.frame(id = id, complete = unlist(lapply(fnames, count_complete)))
}
corr <- function(directory, threshold = 0) {
tcorr <- function(fname) {
data <- read.csv(file.path(directory, fname))
nobs <- sum(complete.cases(data))
if (nobs > threshold) {
return (cor(data$nitrate, data$sulfate, use="complete.obs"))
}
}
tcorrs <- sapply(list.files(directory), tcorr) #get all correlations + NULLs
tcorrs <- unlist(tcorrs[!sapply(tcorrs, is.null)]) #remove NULLs
return (tcorrs)
}
pollutantmean("specdata", "sulfate", 1:10)
getwd()
pollutantmean("specdata", "nitrate", 70:72)
getwd()
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
tcorr <- function(fname) {
data <- read.csv(file.path(directory, fname))
nobs <- sum(complete.cases(data))
if (nobs > threshold) {
return (cor(data$nitrate, data$sulfate, use="complete.obs"))
}
}
tcorrs <- sapply(list.files(directory), tcorr) #get all correlations + NULLs
tcorrs <- unlist(tcorrs[!sapply(tcorrs, is.null)]) #remove NULLs
return (tcorrs)
}
tcorr <- function(fname) {
data <- read.csv(file.path(directory, fname))
nobs <- sum(complete.cases(data))
if (nobs > threshold) {
return (cor(data$nitrate, data$sulfate, use="complete.obs"))
}
}
tcorrs <- sapply(list.files(directory), tcorr) #get all correlations + NULLs
tcorrs <- unlist(tcorrs[!sapply(tcorrs, is.null)]) #remove NULLs
return (tcorrs)
}
complete <- function(directory, id = 1:332) {
count_complete <- function(fname) sum(complete.cases(read.csv(fname)))
fnames <- list.files(directory, full.names=TRUE)[id]
data.frame(id = id, complete = unlist(lapply(fnames, count_complete)))
}
corr <- function(directory, threshold = 0) {
tcorr <- function(fname) {
data <- read.csv(file.path(directory, fname))
nobs <- sum(complete.cases(data))
if (nobs > threshold) {
return (cor(data$nitrate, data$sulfate, use="complete.obs"))
}
}
tcorrs <- sapply(list.files(directory), tcorr) #get all correlations + NULLs
tcorrs <- unlist(tcorrs[!sapply(tcorrs, is.null)]) #remove NULLs
return (tcorrs)
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
total = 0                            ## the sum of all observed values of pollutant (either sulfate or nitrate)
observations = 0                     ## the total number of observed values of pollutant (either sulfate or nitrate)
#Looping thru the directory's files specified in the 'id' argument
for (i in id)
{
## Due to the format of the filename, i.e 001, 010  instead of 1, 10. I became aware that the following method works but not efficient,
## but at the time of the completion of this assignment, it was the only way I knew how to do it.
if (i <10) {
data <- read.csv(paste("0","0", as.character(i), ".csv", sep=""),  ## for example, if 'id' =7, we get 007.csv
header = T,
na.strings=c("NA","NaN", " "))
}
else if (i>=10 & i<100) {
data <- read.csv(paste("0", as.character(i), ".csv", sep=""),  ## for example, if 'id' = 17, we get 017.csv
header = T,
na.strings=c("NA","NaN", " ")
)
}
else       {
data <- read.csv(paste(as.character(i), ".csv", sep=""),     ## Normal
header = T,
na.strings=c("NA","NaN", " ")
)
}
## getting rid of all the "NA" values and, consequently, all the non-complete ovservations (the ones with at least one NA in row)
data = na.omit(data)
##  cumulative addition of the complete observations
observations = observations + nrow(data)
## depending the poluttant ( sulfate or nitrate), we aggregate the observed values
if (pollutant == "sulfate") {total = total + sum(data$sulfate)}
else {total = total + sum(data$nitrate)}
}
## reset directory path
setwd("..")
## returning the mean of the pollutant values
return (total/observations)
}
complete <- function(directory, id = 1:332) {
count_complete <- function(fname) sum(complete.cases(read.csv(fname)))
fnames <- list.files(directory, full.names=TRUE)[id]
data.frame(id = id, complete = unlist(lapply(fnames, count_complete)))
}
corr <- function(directory, threshold = 0) {
tcorr <- function(fname) {
data <- read.csv(file.path(directory, fname))
nobs <- sum(complete.cases(data))
if (nobs > threshold) {
return (cor(data$nitrate, data$sulfate, use="complete.obs"))
}
}
tcorrs <- sapply(list.files(directory), tcorr) #get all correlations + NULLs
tcorrs <- unlist(tcorrs[!sapply(tcorrs, is.null)]) #remove NULLs
return (tcorrs)
}
pollutantmean("specdata", "nitrate", 70:72)
getwd()
pollutantmean("/home/swarupdas/data_science", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
setwd(file.path(getwd(), directory))
total = 0                            ## the sum of all observed values of pollutant (either sulfate or nitrate)
observations = 0                     ## the total number of observed values of pollutant (either sulfate or nitrate)
#Looping thru the directory's files specified in the 'id' argument
for (i in id)
{
## Due to the format of the filename, i.e 001, 010  instead of 1, 10. I became aware that the following method works but not efficient,
## but at the time of the completion of this assignment, it was the only way I knew how to do it.
if (i <10) {
data <- read.csv(paste("0","0", as.character(i), ".csv", sep=""),  ## for example, if 'id' =7, we get 007.csv
header = T,
na.strings=c("NA","NaN", " "))
}
else if (i>=10 & i<100) {
data <- read.csv(paste("0", as.character(i), ".csv", sep=""),  ## for example, if 'id' = 17, we get 017.csv
header = T,
na.strings=c("NA","NaN", " ")
)
}
else       {
data <- read.csv(paste(as.character(i), ".csv", sep=""),     ## Normal
header = T,
na.strings=c("NA","NaN", " ")
)
}
## getting rid of all the "NA" values and, consequently, all the non-complete ovservations (the ones with at least one NA in row)
data = na.omit(data)
##  cumulative addition of the complete observations
observations = observations + nrow(data)
## depending the poluttant ( sulfate or nitrate), we aggregate the observed values
if (pollutant == "sulfate") {total = total + sum(data$sulfate)}
else {total = total + sum(data$nitrate)}
}
## reset directory path
setwd("..")
## returning the mean of the pollutant values
return (total/observations)
}
complete <- function(directory, id = 1:332) {
count_complete <- function(fname) sum(complete.cases(read.csv(fname)))
fnames <- list.files(directory, full.names=TRUE)[id]
data.frame(id = id, complete = unlist(lapply(fnames, count_complete)))
}
corr <- function(directory, threshold = 0) {
tcorr <- function(fname) {
data <- read.csv(file.path(directory, fname))
nobs <- sum(complete.cases(data))
if (nobs > threshold) {
return (cor(data$nitrate, data$sulfate, use="complete.obs"))
}
}
tcorrs <- sapply(list.files(directory), tcorr) #get all correlations + NULLs
tcorrs <- unlist(tcorrs[!sapply(tcorrs, is.null)]) #remove NULLs
return (tcorrs)
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
setwd(file.path(getwd(), directory))
total = 0                            ## the sum of all observed values of pollutant (either sulfate or nitrate)
observations = 0                     ## the total number of observed values of pollutant (either sulfate or nitrate)
#Looping thru the directory's files specified in the 'id' argument
for (i in id)
{
## Due to the format of the filename, i.e 001, 010  instead of 1, 10. I became aware that the following method works but not efficient,
## but at the time of the completion of this assignment, it was the only way I knew how to do it.
if (i <10) {
data <- read.csv(paste("0","0", as.character(i), ".csv", sep=""),  ## for example, if 'id' =7, we get 007.csv
header = T,
na.strings=c("NA","NaN", " "))
}
else if (i>=10 & i<100) {
data <- read.csv(paste("0", as.character(i), ".csv", sep=""),  ## for example, if 'id' = 17, we get 017.csv
header = T,
na.strings=c("NA","NaN", " ")
)
}
else       {
data <- read.csv(paste(as.character(i), ".csv", sep=""),     ## Normal
header = T,
na.strings=c("NA","NaN", " ")
)
}
## getting rid of all the "NA" values and, consequently, all the non-complete ovservations (the ones with at least one NA in row)
data = na.omit(data)
##  cumulative addition of the complete observations
observations = observations + nrow(data)
## depending the poluttant ( sulfate or nitrate), we aggregate the observed values
if (pollutant == "sulfate") {total = total + sum(data$sulfate)}
else {total = total + sum(data$nitrate)}
}
## reset directory path
setwd("..")
## returning the mean of the pollutant values
return (total/observations)
}
complete <- function(directory, id = 1:332) {
count_complete <- function(fname) sum(complete.cases(read.csv(fname)))
fnames <- list.files(directory, full.names=TRUE)[id]
data.frame(id = id, complete = unlist(lapply(fnames, count_complete)))
}
corr <- function(directory, threshold = 0) {
tcorr <- function(fname) {
data <- read.csv(file.path(directory, fname))
nobs <- sum(complete.cases(data))
if (nobs > threshold) {
return (cor(data$nitrate, data$sulfate, use="complete.obs"))
}
}
tcorrs <- sapply(list.files(directory), tcorr) #get all correlations + NULLs
tcorrs <- unlist(tcorrs[!sapply(tcorrs, is.null)]) #remove NULLs
return (tcorrs)
}
pollutantmean("/home/swarupdas/data_science/", "sulfate", 1:10)
pollutantmean("/home/swarupdas/data_science/", "sulfate", 1:10)
pollutantmean("/home/swarupdas/data_science/specdata/", "sulfate", 1:10)
pollutantmean("/home/swarupdas/data_science/specdata/", "sulfate", 1:10)
getwd()
pollutantmean("specdata/", "sulfate", 1:10)
pollutantmean("specdata/", "nitrate", 70:72)
pollutantmean("specdata/", "sulfate",34)
pollutantmean("specdata/", "nitrate")
complete("specdata",1)
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
print(cc$complete)
cc <- complete("specdata", 54)
print(cc$complete)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "complete"])
cr <- corr("specdata")
cr <- sort(cr)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
